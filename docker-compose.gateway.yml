# Docker Compose configuration for Gateway mode deployment
services:
  n8n-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    image: n8n-mcp-server:latest
    container_name: n8n-mcp-server-gateway

    # Gateway mode configuration
    environment:
      - MCP_MODE=gateway
      - MCP_PORT=3000
      - N8N_BASE_URL=${N8N_BASE_URL}
      - N8N_API_KEY=${N8N_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEBUG=${DEBUG:-false}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
      - CACHE_TTL_SECONDS=${CACHE_TTL_SECONDS:-300}

    # Docker secrets support (alternative to env vars)
    secrets:
      - n8n-api-key
      - source: n8n-base-url
        target: /run/secrets/n8n-base-url

    environment:
      - DOCKER_SECRETS_PATH=/run/secrets

    ports:
      - "3000:3000"

    # Docker MCP Gateway requirements
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: false  # Required for temporary files

    # Resource limits per Docker MCP Gateway specs
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
          pids: 100
        reservations:
          cpus: '0.1'
          memory: 128M

    # Health check configuration
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

    # Restart policy for production
    restart: unless-stopped

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Docker secrets configuration
secrets:
  n8n-api-key:
    external: true
    name: n8n_api_key
  n8n-base-url:
    external: true
    name: n8n_base_url

# Network configuration for gateway integration
networks:
  default:
    name: mcp-gateway
    external: true

# Volume for temporary data (if needed)
volumes:
  mcp-temp:
    driver: local