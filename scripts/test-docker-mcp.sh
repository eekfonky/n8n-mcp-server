#!/bin/bash

# n8n MCP Server - Docker MCP Toolkit Test Script
# Tests the Docker MCP integration

set -e

echo "üß™ Testing n8n MCP Server with Docker MCP Toolkit..."
echo ""

# Test catalog visibility
test_catalog() {
    echo "üì¶ Testing catalog visibility..."

    if docker mcp catalog show n8n-mcp-catalog &> /dev/null; then
        echo "‚úÖ n8n-mcp-catalog is visible"
        docker mcp catalog show n8n-mcp-catalog --format json | jq -r '.registry["n8n-server"].description' 2>/dev/null || echo "Catalog structure verified"
    else
        echo "‚ùå n8n-mcp-catalog not found"
        echo "Available catalogs:"
        docker mcp catalog ls
        return 1
    fi
}

# Test tools availability
test_tools() {
    echo ""
    echo "üîß Testing tools availability..."

    local n8n_tools=$(docker mcp tools list 2>/dev/null | grep "n8n_" | wc -l)

    if [ "$n8n_tools" -gt 0 ]; then
        echo "‚úÖ Found $n8n_tools n8n tools"
        echo "Available n8n tools:"
        docker mcp tools list | grep "n8n_" | head -5
        if [ "$n8n_tools" -gt 5 ]; then
            echo "... and $((n8n_tools - 5)) more"
        fi
    else
        echo "‚ùå No n8n tools found"
        return 1
    fi
}

# Test specific tool inspection
test_tool_inspection() {
    echo ""
    echo "üîç Testing tool inspection..."

    if docker mcp tools inspect n8n_discover &> /dev/null; then
        echo "‚úÖ n8n_discover tool is inspectable"
        docker mcp tools inspect n8n_discover | jq -r '.description'
    else
        echo "‚ùå Cannot inspect n8n_discover tool"
        return 1
    fi
}

# Test tool execution (if secrets are configured)
test_tool_execution() {
    echo ""
    echo "üöÄ Testing tool execution..."

    # Check if secrets are configured
    if docker mcp secret list 2>/dev/null | grep -q "n8n-server"; then
        echo "‚úÖ Secrets are configured, testing tool call..."

        # Test health check
        if docker mcp tools call n8n_discover type=health 2>/dev/null; then
            echo "‚úÖ n8n_discover health check successful"
        else
            echo "‚ö†Ô∏è  Tool call failed (check n8n connection)"
        fi
    else
        echo "‚ö†Ô∏è  No secrets configured - skipping execution test"
        echo "Run: docker mcp secret set n8n-server.base_url <your-n8n-url>"
        echo "Run: docker mcp secret set n8n-server.api_key <your-api-key>"
    fi
}

# Test gateway status
test_gateway() {
    echo ""
    echo "üåâ Testing gateway status..."

    # Check if gateway is running (non-destructive check)
    if pgrep -f "docker mcp gateway" &> /dev/null; then
        echo "‚úÖ Docker MCP Gateway is running"
    else
        echo "‚ÑπÔ∏è  Gateway not running - start with:"
        echo "   docker mcp gateway run --use-configured-catalogs"
    fi
}

# Display summary
show_summary() {
    echo ""
    echo "üìä Test Summary:"
    echo "=================="

    # Count successful tests
    local passed=0
    local total=4

    docker mcp catalog show n8n-mcp-catalog &> /dev/null && ((passed++))
    [ "$(docker mcp tools list 2>/dev/null | grep "n8n_" | wc -l)" -gt 0 ] && ((passed++))
    docker mcp tools inspect n8n_discover &> /dev/null && ((passed++))
    docker mcp secret list 2>/dev/null | grep -q "n8n-server" && ((passed++))

    echo "Tests passed: $passed/$total"

    if [ $passed -eq $total ]; then
        echo "üéâ All tests passed! n8n MCP Server is ready to use."
    else
        echo "‚ö†Ô∏è  Some tests failed. Check the output above for details."
    fi

    echo ""
    echo "Next steps:"
    echo "‚Ä¢ Start gateway: docker mcp gateway run --use-configured-catalogs"
    echo "‚Ä¢ List tools: docker mcp tools list | grep n8n_"
    echo "‚Ä¢ Call tools: docker mcp tools call n8n_discover type=health"
}

# Main execution
main() {
    test_catalog
    test_tools
    test_tool_inspection
    test_tool_execution
    test_gateway
    show_summary
}

# Run tests
main "$@"